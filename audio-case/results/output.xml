<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2.2 (Python 3.6.12 on linux)" generated="20200921 14:12:36.739" rpa="false">
<suite id="s1" name="Private-Audio-Oppo" source="/root/haisong/audio-tool/audio-case/testcase/private-audio-oppo.txt">
<test id="s1-t1" name="query-nonexist-para">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>saas</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20200921 14:12:36.921" level="INFO">Creating Session using : alias=saas, url=http://localhost:19091, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200921 14:12:36.921" endtime="20200921 14:12:36.922"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${btid}</var>
</assign>
<msg timestamp="20200921 14:12:36.922" level="INFO">${btid} = 1600668756.922066</msg>
<status status="PASS" starttime="20200921 14:12:36.922" endtime="20200921 14:12:36.922"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"accessKey":"${accesskey}","type":"PORN","btid":"${btid}","data":{"audioName":"可选值","ip":"10.0.23.32可选","channel":"AUDIO","tokenId":"toekn123","url":"http://sdkalarm.bj.bcebos.com/yanshi/political08.mp3"}}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200921 14:12:36.923" level="INFO">${data} = {"accessKey":"X4nf23B7TpsQeKrGMD3G","type":"PORN","btid":"1600668756.922066","data":{"audioName":"可选值","ip":"10.0.23.32可选","channel":"AUDIO","tokenId":"toekn123","url":"http://sdkalarm.bj.bcebos.com/y...</msg>
<status status="PASS" starttime="20200921 14:12:36.922" endtime="20200921 14:12:36.923"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>saas</arg>
<arg>${uri1}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200921 14:12:36.934" level="INFO">POST Request : url=http://localhost:19091/v2/saas/anti_fraud/audio 
 path_url=/v2/saas/anti_fraud/audio 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '234'} 
 body=b'{"accessKey":"X4nf23B7TpsQeKrGMD3G","type":"PORN","btid":"1600668756.922066","data":{"audioName":"\xe5\x8f\xaf\xe9\x80\x89\xe5\x80\xbc","ip":"10.0.23.32\xe5\x8f\xaf\xe9\x80\x89","channel":"AUDIO","tokenId":"toekn123","url":"http://sdkalarm.bj.bcebos.com/yanshi/political08.mp3"}}' 
 </msg>
<msg timestamp="20200921 14:12:36.934" level="INFO">POST Response : url=http://localhost:19091/v2/saas/anti_fraud/audio 
 status=200, reason=OK 
 body={"code":1100,"message":"\u6210\u529f","requestId":"ba4f9899d14799fa9b186b1a2d3818da","btId":"1600668756.922066"} 
 </msg>
<msg timestamp="20200921 14:12:36.934" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200921 14:12:36.923" endtime="20200921 14:12:36.934"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20200921 14:12:36.935" level="INFO">200</msg>
<status status="PASS" starttime="20200921 14:12:36.934" endtime="20200921 14:12:36.935"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200921 14:12:36.935" level="INFO">${result} = {"code":1100,"message":"\u6210\u529f","requestId":"ba4f9899d14799fa9b186b1a2d3818da","btId":"1600668756.922066"}</msg>
<status status="PASS" starttime="20200921 14:12:36.935" endtime="20200921 14:12:36.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200921 14:12:36.936" level="INFO">{"code":1100,"message":"\u6210\u529f","requestId":"ba4f9899d14799fa9b186b1a2d3818da","btId":"1600668756.922066"}</msg>
<status status="PASS" starttime="20200921 14:12:36.935" endtime="20200921 14:12:36.936"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>10</arg>
</arguments>
<msg timestamp="20200921 14:12:46.936" level="INFO">Slept 10 seconds</msg>
<status status="PASS" starttime="20200921 14:12:36.936" endtime="20200921 14:12:46.936"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"accessKey":"${accesskey}","btId":"${btid}","test":"test"}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200921 14:12:46.937" level="INFO">${data} = {"accessKey":"X4nf23B7TpsQeKrGMD3G","btId":"1600668756.922066","test":"test"}</msg>
<status status="PASS" starttime="20200921 14:12:46.936" endtime="20200921 14:12:46.937"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>saas</arg>
<arg>${uri2}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200921 14:12:46.943" level="INFO">POST Request : url=http://localhost:19091/v2/saas/anti_fraud/query_audio 
 path_url=/v2/saas/anti_fraud/query_audio 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '77'} 
 body=b'{"accessKey":"X4nf23B7TpsQeKrGMD3G","btId":"1600668756.922066","test":"test"}' 
 </msg>
<msg timestamp="20200921 14:12:46.943" level="INFO">POST Response : url=http://localhost:19091/v2/saas/anti_fraud/query_audio 
 status=200, reason=OK 
 body={"code":1100,"message":"\u6210\u529f","requestId":"68635524c04a4f65658cee36fd508306","btId":"1600668756.922066","audioText":"\u4e0d\u662f\uff0c\u518d\u6b21\u6210\u4e3a\u4eac\u57ce\u4e2d\u592e\u6743\u529b\u53c8\u56de\u5230\u4e86\u5929\u5b89\u95e8\u5386\u4ee3\u7684\u5e1d\u738b\u603b\u662f\u9690\u8eab\u4e8e\u6df1\u5bab\u9ad8\u5899\u4e4b\u5185\u795e\u79d8\u8fd8\u6709\u81f3\u9ad8\u65e0\u5c1a\uff0c\u56e0\u6b64\u5f53\u6bdb\u6cfd\u4e1c\u5728\u5929\u5b89\u95e8\u57ce\u697c\u4e0a\u51fa\u73b0\u77e5\u4ed6\u6539\u53d8\u4e86\u6570\u5343\u5e74\u6765\u7edf\u6cbb\u6743\u529b\u7684\u8c61\u5f81\u4f60\u7684\u4e1c\u897f\uff0c\u4f3c\u4e4e\u4ece\u95e8\u5185\u8f6c\u79fb\u5230\u4e86\u95e8\u5916\u7684\u6c11\u4f17\u90a3\u4e2a\u800c\u5927\u4f17\u5374\u53ea\u80fd\u7fd8\u9996\u4ef0\u671b\u90a3\u96c4\u5c45\u4e0a\u65b9\u7684\u9886\u8896\u5f00\u56fd\u5927\u5178\u4e4b\u524d\u554a\uff01\u5929\u5b89\u95e8\u5e7f\u573a\u4e00\u7247\u4e71\u8349\uff0c\u54ce\u5440\uff01\u5c31\u5728\u5f00\u56fd\u5927\u5178\u4e4b\u524d\u5317\u4eac\u6e05\u534e\u5927\u5b66\u548c\u5317\u4eac\u5927\u5b66\u7684\u5b66\u751f\u4e49\u52a1\u52b3\u52a8\u628a\u5929\u5b89\u95e8\u524d\u7684\u4e00\u7247\u8352\u8349\u5168\u90e8\u9519\u8fc7\u4e86\u4e00\u4e2a\u6b7b\u795e\u8c01\u554a\uff01\u90a3\u4e2a\u5ba1\u6838\u90a3\u4e2a\u9752\u5e74\u554a\uff01\u5bf9\u8fd9\u4e2a\u89e3\u653e\u519b\u89e3\u653e\u5168","labels":"\u6b63\u5e38","riskLevel":"PASS","tags":[{"confidence":100,"label":"\u65e0\u4eba\u58f0"}]} 
 </msg>
<msg timestamp="20200921 14:12:46.944" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200921 14:12:46.937" endtime="20200921 14:12:46.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20200921 14:12:46.944" level="INFO">200</msg>
<status status="PASS" starttime="20200921 14:12:46.944" endtime="20200921 14:12:46.944"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200921 14:12:46.945" level="INFO">${result} = {"code":1100,"message":"\u6210\u529f","requestId":"68635524c04a4f65658cee36fd508306","btId":"1600668756.922066","audioText":"\u4e0d\u662f\uff0c\u518d\u6b21\u6210\u4e3a\u4eac\u57ce\u4e2d\u592e\u6743\u5...</msg>
<status status="PASS" starttime="20200921 14:12:46.944" endtime="20200921 14:12:46.945"></status>
</kw>
<kw name="Loads" library="json">
<doc>Deserialize ``s`` (a ``str``, ``bytes`` or ``bytearray`` instance
containing a JSON document) to a Python object.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200921 14:12:46.945" level="INFO">${result} = {'code': 1100, 'message': '成功', 'requestId': '68635524c04a4f65658cee36fd508306', 'btId': '1600668756.922066', 'audioText': '不是，再次成为京城中央权力又回到了天安门历代的帝王总是隐身于深宫高墙之内神秘还有至高无尚，因此当毛泽东在天安门城楼上出现知他改变了数千年来统治权力的象征...</msg>
<status status="PASS" starttime="20200921 14:12:46.945" endtime="20200921 14:12:46.945"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200921 14:12:46.946" level="INFO">{'code': 1100, 'message': '成功', 'requestId': '68635524c04a4f65658cee36fd508306', 'btId': '1600668756.922066', 'audioText': '不是，再次成为京城中央权力又回到了天安门历代的帝王总是隐身于深宫高墙之内神秘还有至高无尚，因此当毛泽东在天安门城楼上出现知他改变了数千年来统治权力的象征你的东西，似乎从门内转移到了门外的民众那个而大众却只能翘首仰望那雄居上方的领袖开国大典之前啊！天安门广场一片乱草，哎呀！就在开国大典之前北京清华大学和北京大学的学生义务劳动把天安门前的一片荒草全部错过了一个死神谁啊！那个审核那个青年啊！对这个解放军解放全', 'labels': '正常', 'riskLevel': 'PASS', 'tags': [{'confidence': 100, 'label': '无人声'}]}</msg>
<status status="PASS" starttime="20200921 14:12:46.945" endtime="20200921 14:12:46.946"></status>
</kw>
<kw name="Get Json Value" library="RequestKeywords">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${result}</arg>
<arg>/code</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20200921 14:12:46.947" level="INFO">${code} = 1100</msg>
<status status="PASS" starttime="20200921 14:12:46.946" endtime="20200921 14:12:46.947"></status>
</kw>
<kw name="Get Json Value" library="RequestKeywords">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${result}</arg>
<arg>/message</arg>
</arguments>
<assign>
<var>${message}</var>
</assign>
<msg timestamp="20200921 14:12:46.947" level="INFO">${message} = "成功"</msg>
<status status="PASS" starttime="20200921 14:12:46.947" endtime="20200921 14:12:46.947"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${code}</arg>
<arg>1100</arg>
</arguments>
<status status="PASS" starttime="20200921 14:12:46.947" endtime="20200921 14:12:46.948"></status>
</kw>
<kw name="Should Be Equal" library="BuiltIn">
<doc>Fails if the given objects are unequal.</doc>
<arguments>
<arg>${message}</arg>
<arg>"成功"</arg>
</arguments>
<status status="PASS" starttime="20200921 14:12:46.948" endtime="20200921 14:12:46.948"></status>
</kw>
<doc>查询接口使用不存在的参数</doc>
<status status="PASS" starttime="20200921 14:12:36.920" endtime="20200921 14:12:46.948" critical="yes"></status>
</test>
<test id="s1-t2" name="handel-data-result-porn">
<kw name="Create Session" library="RequestsLibrary">
<doc>Create Session: create a HTTP session to a server</doc>
<arguments>
<arg>saas</arg>
<arg>${url}</arg>
</arguments>
<msg timestamp="20200921 14:12:46.949" level="INFO">Creating Session using : alias=saas, url=http://localhost:19091, headers={},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<status status="PASS" starttime="20200921 14:12:46.949" endtime="20200921 14:12:46.950"></status>
</kw>
<kw name="Get Current Date" library="DateTime">
<doc>Returns current local or UTC time with an optional increment.</doc>
<arguments>
<arg>result_format=epoch</arg>
</arguments>
<assign>
<var>${btid}</var>
</assign>
<msg timestamp="20200921 14:12:46.950" level="INFO">${btid} = 1600668766.950029</msg>
<status status="PASS" starttime="20200921 14:12:46.950" endtime="20200921 14:12:46.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>{"accessKey":"${accesskey}","type":"PORN","btid":"${btid}","data":{"audioName":"可选值","ip":"10.0.23.32可选","channel":"AUDIO","tokenId":"toekn123","url":"http://static-1253442168.file.myqcloud.com/lecture_advance_audio/7062850_1529054831000.mp3"}}</arg>
</arguments>
<assign>
<var>${data}</var>
</assign>
<msg timestamp="20200921 14:12:46.951" level="INFO">${data} = {"accessKey":"X4nf23B7TpsQeKrGMD3G","type":"PORN","btid":"1600668766.950029","data":{"audioName":"可选值","ip":"10.0.23.32可选","channel":"AUDIO","tokenId":"toekn123","url":"http://static-1253442168.file.m...</msg>
<status status="PASS" starttime="20200921 14:12:46.950" endtime="20200921 14:12:46.951"></status>
</kw>
<kw name="Post Request" library="RequestsLibrary">
<doc>Send a POST request on the session object found using the
given `alias`</doc>
<arguments>
<arg>saas</arg>
<arg>${uri1}</arg>
<arg>${data}</arg>
</arguments>
<assign>
<var>${response}</var>
</assign>
<msg timestamp="20200921 14:12:46.960" level="INFO">POST Request : url=http://localhost:19091/v2/saas/anti_fraud/audio 
 path_url=/v2/saas/anti_fraud/audio 
 headers={'User-Agent': 'python-requests/2.24.0', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Length': '272'} 
 body=b'{"accessKey":"X4nf23B7TpsQeKrGMD3G","type":"PORN","btid":"1600668766.950029","data":{"audioName":"\xe5\x8f\xaf\xe9\x80\x89\xe5\x80\xbc","ip":"10.0.23.32\xe5\x8f\xaf\xe9\x80\x89","channel":"AUDIO","tokenId":"toekn123","url":"http://static-1253442168.file.myqcloud.com/lecture_advance_audio/7062850_1529054831000.mp3"}}' 
 </msg>
<msg timestamp="20200921 14:12:46.960" level="INFO">POST Response : url=http://localhost:19091/v2/saas/anti_fraud/audio 
 status=200, reason=OK 
 body={"code":1100,"message":"\u6210\u529f","requestId":"26c78b4fc7336e6b731876dcca9c5e16","btId":"1600668766.950029"} 
 </msg>
<msg timestamp="20200921 14:12:46.960" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20200921 14:12:46.951" endtime="20200921 14:12:46.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${response.status_code}</arg>
</arguments>
<msg timestamp="20200921 14:12:46.961" level="INFO">200</msg>
<status status="PASS" starttime="20200921 14:12:46.960" endtime="20200921 14:12:46.961"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${response.content}</arg>
</arguments>
<assign>
<var>${result}</var>
</assign>
<msg timestamp="20200921 14:12:46.961" level="INFO">${result} = {"code":1100,"message":"\u6210\u529f","requestId":"26c78b4fc7336e6b731876dcca9c5e16","btId":"1600668766.950029"}</msg>
<status status="PASS" starttime="20200921 14:12:46.961" endtime="20200921 14:12:46.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>${result}</arg>
</arguments>
<msg timestamp="20200921 14:12:46.961" level="INFO">{"code":1100,"message":"\u6210\u529f","requestId":"26c78b4fc7336e6b731876dcca9c5e16","btId":"1600668766.950029"}</msg>
<status status="PASS" starttime="20200921 14:12:46.961" endtime="20200921 14:12:46.962"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>120</arg>
</arguments>
<status status="FAIL" starttime="20200921 14:12:46.962" endtime="20200921 14:13:13.794"></status>
</kw>
<doc>正确离线处理</doc>
<status status="FAIL" starttime="20200921 14:12:46.949" endtime="20200921 14:13:13.795" critical="yes">Execution terminated by signal</status>
</test>
<test id="s1-t3" name="accesskey-not-exist">
<doc>不存在accesskey</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.795" endtime="20200921 14:13:13.796" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t4" name="accesskey-null">
<doc>查询接口accesskey为空</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.796" endtime="20200921 14:13:13.797" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t5" name="accesskey-miss">
<doc>查询接口没有accesskey</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.797" endtime="20200921 14:13:13.798" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t6" name="type-all">
<doc>所有必填参数和addtion选填参数，addition传入EMOTION参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.798" endtime="20200921 14:13:13.799" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t7" name="typ-LANGUAGE">
<doc>接口所有必填参数使用合法值，提交音频后，立即调用查询接口，返回1101正在处理中code码</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.799" endtime="20200921 14:13:13.801" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t8" name="type-SING">
<doc>接口所有必填参数使用合法值</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.802" endtime="20200921 14:13:13.802" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t9" name="type-AD-all">
<doc>接口所有必填参数使用合法值</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.803" endtime="20200921 14:13:13.804" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t10" name="type-political-appid-select">
<doc>所有必填参数和appId选填参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.804" endtime="20200921 14:13:13.805" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t11" name="type-emoiton">
<doc>接口所有必填参数使用合法值，提交音频后，立即调用查询接口，返回1101正在处理中code码</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.805" endtime="20200921 14:13:13.807" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t12" name="type-moan">
<doc>接口所有必填参数使用合法值，提交音频后，立即调用查询接口，返回1101正在处理中code码</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.807" endtime="20200921 14:13:13.809" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t13" name="type-SCENE">
<doc>type为SCENE场景识别</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.809" endtime="20200921 14:13:13.810" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t14" name="type-GENDER">
<doc>type为gender性别识别</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.810" endtime="20200921 14:13:13.811" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t15" name="type-ABUSE">
<doc>type为gender性别识别</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.811" endtime="20200921 14:13:13.812" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t16" name="type-SCENE_GENDER">
<doc>type组合为scene和gender</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.812" endtime="20200921 14:13:13.812" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t17" name="type-SCENE_PORN">
<doc>type组合为scene和gender</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.813" endtime="20200921 14:13:13.813" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t18" name="type-SCENE_MOAN">
<doc>type组合为scene和gender</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.813" endtime="20200921 14:13:13.814" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t19" name="type-SCENE_DEFAULT">
<doc>type组合为scene和gender</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.814" endtime="20200921 14:13:13.815" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t20" name="type-GENDER_PORN">
<doc>type是组合</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.815" endtime="20200921 14:13:13.815" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t21" name="type-GENDER_MOAN">
<doc>type是组合</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.816" endtime="20200921 14:13:13.816" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t22" name="type-GENDER_DEFAULT">
<doc>type是组合</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.816" endtime="20200921 14:13:13.817" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t23" name="type-MOAN_PORN">
<doc>所有必填参数和addtion选填参数，addition传入EMOTION参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.817" endtime="20200921 14:13:13.818" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t24" name="type-AD_MOAN">
<doc>所有必填参数和addtion选填参数，addition传入EMOTION参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.819" endtime="20200921 14:13:13.820" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t25" name="type-AD_PORN">
<doc>所有必填参数和addtion选填参数，addition传入EMOTION参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.820" endtime="20200921 14:13:13.821" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t26" name="type-null">
<doc>type字段为空</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.821" endtime="20200921 14:13:13.822" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t27" name="type-not-exist">
<doc>非法type</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.822" endtime="20200921 14:13:13.822" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t28" name="type-miss">
<doc>缺少type字段</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.823" endtime="20200921 14:13:13.823" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t29" name="nonexist-para-commit">
<doc>传入不存在的参数，其他参数均正常</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.824" endtime="20200921 14:13:13.825" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t30" name="btid-miss">
<doc>缺少btid字段</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.825" endtime="20200921 14:13:13.825" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t31" name="btid-null">
<doc>btit字段为空</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.826" endtime="20200921 14:13:13.826" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t32" name="btid-illegal-data">
<doc>btid传入""值，返回json格式不正确</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.826" endtime="20200921 14:13:13.827" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t33" name="url-illegal">
<doc>url字段为无效音频网址，查询返回1903错误</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.827" endtime="20200921 14:13:13.828" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t34" name="url-miss">
<doc>缺少url，其他选填参数都存在</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.829" endtime="20200921 14:13:13.830" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t35" name="url-null">
<doc>url字段为空</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.830" endtime="20200921 14:13:13.830" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t36" name="callBack">
<doc>增加回调</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.831" endtime="20200921 14:13:13.831" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t37" name="callBack-iregal">
<doc>回调地址为非法参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.831" endtime="20200921 14:13:13.832" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t38" name="callBack-拒绝连接">
<doc>回调地址为非法参数</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.832" endtime="20200921 14:13:13.833" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t39" name="callBack-null">
<doc>回调地址为空</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.834" endtime="20200921 14:13:13.834" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t40" name="callbackParam-iregal">
<doc>回调参数非法内容格式</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.834" endtime="20200921 14:13:13.835" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t41" name="callbackParam-null">
<doc>回调参数为空</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.836" endtime="20200921 14:13:13.836" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t42" name="returnAllText-reject">
<doc>回调返回全部文本</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.836" endtime="20200921 14:13:13.837" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t43" name="returnAllText-pass">
<doc>回调返回全部文本</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.837" endtime="20200921 14:13:13.838" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<test id="s1-t44" name="muteDetection">
<doc>静音检测，第一段静音不过AE，第二段内容123
增加label字段标识静音（回调和查询）</doc>
<tags>
<tag>robot:exit</tag>
</tags>
<status status="FAIL" starttime="20200921 14:13:13.838" endtime="20200921 14:13:13.840" critical="yes">Test execution stopped due to a fatal error.</status>
</test>
<status status="FAIL" starttime="20200921 14:12:36.740" endtime="20200921 14:13:13.841"></status>
</suite>
<statistics>
<total>
<stat pass="1" fail="43">Critical Tests</stat>
<stat pass="1" fail="43">All Tests</stat>
</total>
<tag>
<stat pass="1" fail="1" info="combined" combined="NOT robot:exit">NOT robot:exit</stat>
<stat pass="0" fail="42">robot:exit</stat>
</tag>
<suite>
<stat pass="1" fail="43" id="s1" name="Private-Audio-Oppo">Private-Audio-Oppo</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
